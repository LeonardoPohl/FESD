<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="packages\Microsoft.Windows.CppWinRT.2.0.210806.1\build\native\Microsoft.Windows.CppWinRT.props" Condition="Exists('packages\Microsoft.Windows.CppWinRT.2.0.210806.1\build\native\Microsoft.Windows.CppWinRT.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{82485C3F-7F8B-4D8A-BEBD-4A9F21C32D54}</ProjectGuid>
    <RootNamespace>OpenniAdventures</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <ProjectName>FESDData</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(ProjectDir)bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)bin\intermediates\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(ProjectDir)bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)bin\intermediates\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg">
    <VcpkgEnableManifest>true</VcpkgEnableManifest>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <VcpkgTriplet>x64-windows</VcpkgTriplet>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <VcpkgTriplet>x64-windows</VcpkgTriplet>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)Dependencies\GLFW\include;$(ProjectDir)third-party\OpenGL;$(ProjectDir)src;$(ProjectDir)third-party\OpenNI_SDK\Include;$(ProjectDir)Dependencies\GLEW\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)Dependencies\GLEW\lib\Release\x64;$(ProjectDir)Dependencies\GLFW\lib-vc2022;$(ProjectDir)third-party\OpenNI_SDK\libs;$(ProjectDir)third-party\OpenGL\bin\$(Platform)\$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>glfw3.lib;glew32s.lib;opengl32.lib;OpenGL.lib;OpenNI2.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;NOMINMAX;_CRT_SECURE_NO_WARNINGS;_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)third-party\openpose\include;$(ProjectDir)Dependencies\GLFW\include;$(ProjectDir)third-party\OpenGL;$(ProjectDir)src;$(ProjectDir)third-party\OpenNI_SDK\Include;$(ProjectDir)Dependencies\GLEW\include;$(ProjectDir)third-party\openpose\3rdparty\windows\opencv\include;$(ProjectDir)third-party\openpose\3rdparty\windows\caffe\include;$(ProjectDir)third-party\openpose\3rdparty\windows\caffe3rdparty\include;$(ProjectDir)third-party\openpose\3rdparty\windows\freeglut\include;$(ProjectDir)third-party\openpose\3rdparty\windows\spinnaker\include;$(ProjectDir)third-party\nuitrack-sdk\Nuitrack\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)Dependencies\GLEW\lib\Release\x64;$(ProjectDir)Dependencies\GLFW\lib-vc2022;$(ProjectDir)third-party\openpose\build\src\openpose\Release;$(ProjectDir)third-party\OpenNI_SDK\libs;$(ProjectDir)third-party\OpenGL\bin\$(Platform)\$(Configuration);$(ProjectDir)third-party\openpose\3rdparty\windows\opencv\x64\vc15\lib;$(ProjectDir)third-party\openpose\3rdparty\windows\freeglut\lib;$(ProjectDir)third-party\openpose\3rdparty\windows\caffe3rdparty\lib;$(ProjectDir)third-party\openpose\3rdparty\windows\caffe\lib;$(ProjectDir)third-party\openpose\3rdparty\windows\spinnaker\lib;$(ProjectDir)third-party\nuitrack-sdk\Nuitrack\lib\win64;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>glfw3.lib;glew32s.lib;opengl32.lib;OpenGL.lib;OpenNI2.lib;freeglut.lib;glog.lib;gflags.lib;caffe.lib;caffeproto.lib;opencv_world450.lib;openpose.lib;middleware.lib;nuitrack.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="src\cameras\CameraHandler.cpp" />
    <ClCompile Include="src\cameras\NuiPlaybackCamera.cpp" />
    <ClCompile Include="src\obj\PointCloud.cpp" />
    <ClCompile Include="src\main.cpp" />
    <ClCompile Include="src\cameras\OrbbecCamera.cpp" />
    <ClCompile Include="src\cameras\RealSenseCamera.cpp" />
    <ClCompile Include="src\obj\SkeletonDetectorNuitrack.cpp" />
    <ClCompile Include="src\obj\SkeletonDetectorOpenPose.cpp" />
    <ClCompile Include="src\utilities\helper\GLFWHelper.cpp" />
    <ClCompile Include="src\utilities\helper\ImGuiHelper.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include=".gitignore" />
    <None Include="imgui.ini">
      <DeploymentContent>true</DeploymentContent>
    </None>
    <None Include="nuitrack\CnnDetector\TFCnnDetector\model_description.bin">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="nuitrack\CnnHPE\model.bin">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="nuitrack\license.json">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="nuitrack\license.json.lock">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="nuitrack\nuitrack.config">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="nuitrack\nuitrack_local.config">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="nuitrack\regStat\trees.bin">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="nuitrack\regStat\trees_stat#0.bin">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="packages.config" />
    <None Include="Readme.md" />
    <None Include="resources\Exercises.json">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="resources\JointErrors.json">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="resources\shaders\PointCloud\PointCloud.frag" />
    <None Include="resources\shaders\PointCloud\PointCloud.vert" />
    <None Include="resources\SkeletonErrors.json">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </None>
    <None Include="vcpkg.json" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\cameras\NuiPlaybackCamera.h" />
    <ClInclude Include="src\obj\BoundingBox.h" />
    <ClInclude Include="src\obj\Error.h" />
    <ClInclude Include="src\obj\Exercise.h" />
    <ClInclude Include="src\obj\Logger.h" />
    <ClInclude Include="src\obj\Point.h" />
    <ClInclude Include="src\obj\PointCloudStreamState.h" />
    <ClInclude Include="src\cameras\CameraHandler.h" />
    <ClInclude Include="src\obj\PointCloud.h" />
    <ClInclude Include="src\cameras\DepthCamera.h" />
    <ClInclude Include="src\cameras\OrbbecCamera.h" />
    <ClInclude Include="src\cameras\RealsenseCamera.h" />
    <ClInclude Include="src\obj\SessionParameters.h" />
    <ClInclude Include="src\obj\SkeletonDetectorNuitrack.h" />
    <ClInclude Include="src\obj\SkeletonDetectorOpenPose.h" />
    <ClInclude Include="src\samples\nuitrack_sample.h" />
    <ClInclude Include="src\utilities\Callbacks.h" />
    <ClInclude Include="src\utilities\CMaps.h" />
    <ClInclude Include="src\utilities\Consts.h" />
    <ClInclude Include="src\utilities\GLUtil.h" />
    <ClInclude Include="src\utilities\helper\GLFWHelper.h" />
    <ClInclude Include="src\utilities\helper\ImGuiHelper.h" />
    <ClInclude Include="src\utilities\Status.h" />
    <ClInclude Include="src\utilities\Utils.h" />
    <ClInclude Include="src\utilities\WindowInfo.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\middleware\DepthProviderAdapterAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\ColorSensor_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\DepthSensor_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\GestureRecognizer_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\HandTracker_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\IOS_StructureCallbackProvider_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\IssueTracker_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\NuitrackDevice_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\NuitrackModule_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\Nuitrack_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\Public_Nuitrack_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\SkeletonTracker_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\capi\UserTracker_CAPI.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\middleware\android\NuitrackManager.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\middleware\android\USBGateKeeper.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\modules\ColorSensor.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\modules\DepthSensor.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\modules\GestureRecognizer.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\modules\HandTracker.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\modules\HeaderOnlyAPI_Module.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\modules\Module.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\modules\NuitrackModule.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\modules\SkeletonTracker.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\modules\UserTracker.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\Nuitrack.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\BoundingBox.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Color3.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\DepthFrame.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Error.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Export.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Frame.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\FrameBorderIssue.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Gesture.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\GestureData.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Hand.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\HandTrackerData.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Human.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\HumanData.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Issue.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\IssuesData.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\NuitrackDevice.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\NuitrackDeviceCommon.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\ObjectData.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\OcclusionIssue.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Orientation.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\OutputMode.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\RGBFrame.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\RGBMark.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\SensorIssue.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Skeleton.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\SkeletonData.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\User.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\UserFrame.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\types\Vector3.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\utils\CallbackStruct.h" />
    <ClInclude Include="third-party\nuitrack-sdk\Nuitrack\include\nuitrack\utils\ExceptionTranslator.h" />
    <ClInclude Include="third-party\OpenNI_SDK\Include\OpenNI.h" />
  </ItemGroup>
  <ItemGroup>
    <Font Include="resources\fonts\Roboto-Medium.ttf" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="resources\textures\brick.png" />
    <Image Include="resources\textures\ml.png" />
  </ItemGroup>
  <ItemGroup>
    <Text Include="nuitrack\user_id.txt">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </Text>
    <Text Include="src\requirements.txt" />
  </ItemGroup>
  <ItemGroup>
    <Xml Include="nuitrack\FABRIKSkeleton.xml">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </Xml>
    <Xml Include="nuitrack\kinematic_filter.xml">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </Xml>
    <Xml Include="nuitrack\OrbbecSDKConfig_v1.0.xml">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </Xml>
    <Xml Include="nuitrack\poseoptimization\skeleton.xml" />
    <Xml Include="nuitrack\skeleton.xml">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </Xml>
    <Xml Include="nuitrack\skeleton_limits.xml">
      <DeploymentContent Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</DeploymentContent>
    </Xml>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="packages\Microsoft.Windows.CppWinRT.2.0.210806.1\build\native\Microsoft.Windows.CppWinRT.targets" Condition="Exists('packages\Microsoft.Windows.CppWinRT.2.0.210806.1\build\native\Microsoft.Windows.CppWinRT.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('packages\Microsoft.Windows.CppWinRT.2.0.210806.1\build\native\Microsoft.Windows.CppWinRT.props')" Text="$([System.String]::Format('$(ErrorText)', 'packages\Microsoft.Windows.CppWinRT.2.0.210806.1\build\native\Microsoft.Windows.CppWinRT.props'))" />
    <Error Condition="!Exists('packages\Microsoft.Windows.CppWinRT.2.0.210806.1\build\native\Microsoft.Windows.CppWinRT.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\Microsoft.Windows.CppWinRT.2.0.210806.1\build\native\Microsoft.Windows.CppWinRT.targets'))" />
  </Target>
</Project>